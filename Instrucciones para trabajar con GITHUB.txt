
Primero se debe configurar el usuario y el correo, abra el cmd y ejecute los siguientes comandos.

	git config --global user.name "Carlos Popoca"
	git config --global user.name "Carlos Alberto Popoca"
	git config --global user.email popocas21@hotmail.com
	git config --global user.email poac@praxis.com.mx"

	Nota: se especifica el nombre del usuario y el correo

Para crear un repositorio nuevo siga los siguientes pasos:

	1.-Entre con su cuenta a GITHUB
	2.-De clic el botón "+" de arriba a la derecha y seleccione la opción New Repository
	3.- Escriba un nombre, elija si es público o privado y opcionalmente una descripción.
	Nota: La opción Initialize this repository with a README" regularmente se deja desmarcada

Luego para subir la carpeta del codigo del proyecto ir a la carpeta donde se encuentra en el proyecto y ejecutar el
siguiente comando.

	git init
	Nota: Este comando se ejecuta para establecer que la carpeta se ligara a un repositorio GIT, 
		solo es necesario ejecutarlo una sola vez

Luego, desde la carpeta  haces el comando "add" para agregar todos los archivos al "staging area".

	git add .

Despues se ejecuta e siguiente comando para hacer el commit

	git commit -m "first commit"

	Nota: firs commit, es el comentario qe agregara al commit

Luego especifique a que repositorio de github se añadira todos los archivos

	git remote add origin https://github.com/CarlPopoca/ejemplo.git
	Nota: Este comando se ejecuta cuando se quiere enlazar una carpeta con un repositorio especifico, 
		solo es necesario ejecutarlo una vez

Y por ultimo ejecute el siguiente comando para que se comience la carga de archivos

	git push -u origin master

	Nota:pedira el usuario y contraseña.

Los pasos mencionados anteriormente desde el comando GIT INIT hasta el PUSH, se ejecutaran uno por uno cuando se desee subir el contenido 
	a un repositorio por primera vez.

Para listar la configuración ejecute el siguiente comando

	git config --list

Para generar clave publica para conectarse por ssh al repositorio GIT, ejecute el programa puttygen.exe,
Luego seleccione la opción SSH de parameters y de clic en el boton Generate

Para registrar la clave privada ppk en windows, abra la conexion putty, seleccione la url de github para ssh, luego en la pestaña 
de SSH >auth coloque la ruta del archivo ppk y de clic en el boton open, para mas detalle revise el siguiente link 
para ver como se hace esto en windows.

http://eltallerdelbit.com/ssh-clave-publica-privada

Para clonar un repositorio (descargar) ejecute el siguiente comando

	git clone https://github.com/CarlPopoca/ejemplo.git

Para verificar el estatus de su fichero, ver lo que esta trackeado ejecute el siguiente comando

	git status

Si elige usar autenticacion ssh, que es añadir ip publica de ssh y registrar su clave privada en su equipo local y previamente habia descargado su codigo 
por http debe ejecutar el siguiente comando para especificar la ruta por ssh.

	--Si es en linux
	nano .git/config

	--Si es por windows busque el archivo .git/config dentro de la carpeta del codigo de su proyecto y abralo para cambiar la url

	.git/config
Cancelar cambios hechos aun repositorio descargado, en el cmd situese en la carpeta del proyecto descargado y ejecute el siguiente comando:

	git stash

Cancelar cambios hechos a un archivo y regresar a la versión anterior:

	git checkout -- nombrearchivo.extension

Bajar cambios y hacer marge al mismo tiempo:

 	git pull origin master --allow-unrelated-histories

Cambiar a otro branch, en el cmd ejecute el siguiente comando:

	git checkout nombrerepositorio

Verificar que se cambio de branch, ejecue:

	git branch

Permitir dar commit a archivos con nombres muy largos:

	git config --system core.longpaths true

Eliminar un carpeta, situese en la ruta donde se encuentra y ejecute los siguientes comandos:

	git rm -r micarpeta
	git commit -m "Se elimino la carpeta"
	git push -u origin master

Eliminar un archivo, situese dentro de la carpeta y ejecute los siguientes comandos:

	git rm nombrearchivo.extension
	git commit -m "Se elimino la carpeta"
	git push -u origin master

Renombrar una carpeta, situese en la ruta donde se encuentra la carpeta y ejecute los siguientes comandos:

	git mv nombreactual nombrenuevo
	git commit -m "Se actualizo el nombre de la carpeta"
	git push -u origin master

Añadir un solo archivo, situese en la ruta donde se encuentra y ejecute los siguientes pasos:

	git add nombrearchivo
	git commit -m "Se sube archivo"
	git push -u origin master

Deshacer el último commit porque ya no desea confirmar la subida de los cambios, situese en la carpeta y ejecute:

	git reset --hard HEAD~1
	
Ver con cual usuario esta configurado el GIT en su local:

	 git config user.name

Comparar archivos locales con el remoto, nos colocamos dentro de la rama que se desea comparar y se ejecuta el comando:

	 git diff	

----------------------------------------------------------------------------------------
Creación de branch.

Crear un branch:

	git checkout -b desarrollo_11032020

	Nota: desarrollo_11032020 es el nombre del branch

Posicionarse en el branch creado:

	git checkout desarrollo_11032020

Agregar los archivos al branch:

	git add --all

Realizar commit de los archivos

	git commit -m "Initial code branch"

Confirmar los comandos ejecutados en el servidor Gitlab:

	git push -u origin desarrollo_11032020

	Nota: Estos comandos sustituiran en automático la liga de su código al master por el del branch, para trabajar con el master tendra que descargar el código en 
	otra carpeta.

---------------------------------------------------------------------------------------
Eliminar Branch


Posicionarse en el branch creado:

	git checkout desarrollo_11032020

Eliminación del branch:

	git push origin --delete desarrollo_11032020


-----------------------------------------------------------------------
Hacer merge del master a un branch

Posicionarse ruta del código que descargo del master:

	git checkout master

Realizar el merge de la rama:

	git pull origin master

	git merge desarrollo_11032020

------------------------------------------------------------------------
Restaurar los archivos del repositorio master sobre la local de un branch.

Ir a la ruta local del código del branch, ejecutar el siguiente comando:

	git fetch origin master
	
	git reset --hard origin/master

------------------------------------------------------------------------
Mostrar diferencias entre ramas.

Ir a la ruta del branch que desea comparar con otro, y ejecute el siguiente comando:

	git branch –a 
------------------------------------------------------------------------
Para hacer un merge forzado en caso que arroje el siguiente error:

hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

Ejecute la siguiente instrucción antes de hacer el push
git pull origin master --allow-unrelated-histories
------------------------------------------------------------------------
Crear submodulos en un repositorio GIT

Los comandos para convertir un repositorio GIT en un submodulo de otro repositorio existente son los siguientes:

	git submodule add https://github.com/chaconinc/DbConnector.git

	git commit -m "Se sube submodulo"

	git push -u origin master
 
Algunos comandos que se pueden ejecutar después de ejecutar el comando git submodule para ver el estatus e información de los submodulos agregados son
los siguientes:

	git status

	git diff --cached DbConnector

	git diff --cached --submodule

-------------------------------------------------------------------------
Renombrar un remoto

	git remote rename origin old-origin
        Nota: Recibe dos argumentos, el primero es el nombre actual y el segundo el nombre que tendra.

Verificar el nombre del remoto

	git remote -v

-------------------------------------------------------------------------
Renombar una rama

	git branch -m new-name

-------------------------------------------------------------------------
Descargar el codigo de una rama después de haber descargado el código

git branch B01-FUNCTION-22102020
git checkout B01-FUNCTION-22102020
git pull

Si marca el error lo anterior puede intentar con:

git branch B01-FUNCTION-22102020
git branch --set-upstream-to=origin/B01-FUNCTION-22102020
git pull
		

----------------------------------------------------------
Modificar contraseña de Gitlab en windows

Ir a Panel de Control > Panel de control\Todos los elementos de Panel de control\Administrador de credenciales

Buscar la cuenta de Git y editar el password

------------------------------------------------------------
Para descargar de una rama especifica

git clone --branch B05-FUNCTION-09042021-CACS http://192.168.24.204/gitlab/sist.praxis-code/cofijava.git
